// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.12
// source: api/recs/recs_service.proto

package recs

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserID) Reset() {
	*x = UserID{}
	mi := &file_api_recs_recs_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_api_recs_recs_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_api_recs_recs_service_proto_rawDescGZIP(), []int{0}
}

func (x *UserID) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Preferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagRatings []*TagRating `protobuf:"bytes,1,rep,name=tag_ratings,json=tagRatings,proto3" json:"tag_ratings,omitempty"`
}

func (x *Preferences) Reset() {
	*x = Preferences{}
	mi := &file_api_recs_recs_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Preferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Preferences) ProtoMessage() {}

func (x *Preferences) ProtoReflect() protoreflect.Message {
	mi := &file_api_recs_recs_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Preferences.ProtoReflect.Descriptor instead.
func (*Preferences) Descriptor() ([]byte, []int) {
	return file_api_recs_recs_service_proto_rawDescGZIP(), []int{1}
}

func (x *Preferences) GetTagRatings() []*TagRating {
	if x != nil {
		return x.TagRatings
	}
	return nil
}

type UpdatePreferencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TagRatings []*TagRating `protobuf:"bytes,2,rep,name=tag_ratings,json=tagRatings,proto3" json:"tag_ratings,omitempty"`
}

func (x *UpdatePreferencesRequest) Reset() {
	*x = UpdatePreferencesRequest{}
	mi := &file_api_recs_recs_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePreferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePreferencesRequest) ProtoMessage() {}

func (x *UpdatePreferencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_recs_recs_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePreferencesRequest.ProtoReflect.Descriptor instead.
func (*UpdatePreferencesRequest) Descriptor() ([]byte, []int) {
	return file_api_recs_recs_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePreferencesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdatePreferencesRequest) GetTagRatings() []*TagRating {
	if x != nil {
		return x.TagRatings
	}
	return nil
}

type NewRecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NewRecResponse) Reset() {
	*x = NewRecResponse{}
	mi := &file_api_recs_recs_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewRecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRecResponse) ProtoMessage() {}

func (x *NewRecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_recs_recs_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRecResponse.ProtoReflect.Descriptor instead.
func (*NewRecResponse) Descriptor() ([]byte, []int) {
	return file_api_recs_recs_service_proto_rawDescGZIP(), []int{3}
}

func (x *NewRecResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_api_recs_recs_service_proto protoreflect.FileDescriptor

var file_api_recs_recs_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x63, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72,
	0x65, 0x63, 0x73, 0x1a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x63, 0x73, 0x2f, 0x72, 0x65,
	0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x0b, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0b, 0x74, 0x61, 0x67, 0x5f,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x72, 0x65, 0x63, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0a,
	0x74, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x65, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x0b, 0x74, 0x61, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x63, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x74, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0x32, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x65, 0x63, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0xdd, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x72, 0x65, 0x63, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x72, 0x65, 0x63, 0x73, 0x2e, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x12, 0x16, 0x2f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x66, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x2e,
	0x72, 0x65, 0x63, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x72, 0x65, 0x63, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x32, 0x16, 0x2f, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x3e, 0x0a, 0x06, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x12, 0x0c, 0x2e, 0x72, 0x65, 0x63,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x14, 0x2e, 0x72, 0x65, 0x63, 0x73, 0x2e,
	0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x6e, 0x65, 0x77, 0x2d, 0x72, 0x65, 0x63,
	0x12, 0x53, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x70, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x72, 0x65, 0x63, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x2a, 0x10, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x62, 0x73, 0x61, 0x6c, 0x61, 0x64, 0x2f, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x61, 0x2d, 0x72, 0x65, 0x63, 0x73, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x72, 0x65, 0x63, 0x73, 0x3b, 0x72, 0x65, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_recs_recs_service_proto_rawDescOnce sync.Once
	file_api_recs_recs_service_proto_rawDescData = file_api_recs_recs_service_proto_rawDesc
)

func file_api_recs_recs_service_proto_rawDescGZIP() []byte {
	file_api_recs_recs_service_proto_rawDescOnce.Do(func() {
		file_api_recs_recs_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_recs_recs_service_proto_rawDescData)
	})
	return file_api_recs_recs_service_proto_rawDescData
}

var file_api_recs_recs_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_recs_recs_service_proto_goTypes = []any{
	(*UserID)(nil),                   // 0: recs.UserID
	(*Preferences)(nil),              // 1: recs.Preferences
	(*UpdatePreferencesRequest)(nil), // 2: recs.UpdatePreferencesRequest
	(*NewRecResponse)(nil),           // 3: recs.NewRecResponse
	(*TagRating)(nil),                // 4: recs.TagRating
	(*Item)(nil),                     // 5: recs.Item
	(*emptypb.Empty)(nil),            // 6: google.protobuf.Empty
}
var file_api_recs_recs_service_proto_depIdxs = []int32{
	4, // 0: recs.Preferences.tag_ratings:type_name -> recs.TagRating
	4, // 1: recs.UpdatePreferencesRequest.tag_ratings:type_name -> recs.TagRating
	5, // 2: recs.NewRecResponse.items:type_name -> recs.Item
	0, // 3: recs.RecsService.GetPreferences:input_type -> recs.UserID
	2, // 4: recs.RecsService.UpdatePreferences:input_type -> recs.UpdatePreferencesRequest
	0, // 5: recs.RecsService.NewRec:input_type -> recs.UserID
	0, // 6: recs.RecsService.DeleteDpeferences:input_type -> recs.UserID
	1, // 7: recs.RecsService.GetPreferences:output_type -> recs.Preferences
	1, // 8: recs.RecsService.UpdatePreferences:output_type -> recs.Preferences
	3, // 9: recs.RecsService.NewRec:output_type -> recs.NewRecResponse
	6, // 10: recs.RecsService.DeleteDpeferences:output_type -> google.protobuf.Empty
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_recs_recs_service_proto_init() }
func file_api_recs_recs_service_proto_init() {
	if File_api_recs_recs_service_proto != nil {
		return
	}
	file_api_recs_recs_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_recs_recs_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_recs_recs_service_proto_goTypes,
		DependencyIndexes: file_api_recs_recs_service_proto_depIdxs,
		MessageInfos:      file_api_recs_recs_service_proto_msgTypes,
	}.Build()
	File_api_recs_recs_service_proto = out.File
	file_api_recs_recs_service_proto_rawDesc = nil
	file_api_recs_recs_service_proto_goTypes = nil
	file_api_recs_recs_service_proto_depIdxs = nil
}
